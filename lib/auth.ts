import NextAuth, { type NextAuthOptions } from "next-auth"
import GoogleProvider from "next-auth/providers/google"
import { usersCollection } from "./mongodb"

export const authOptions: NextAuthOptions = {
  session: { strategy: "jwt" },
  providers: [
    GoogleProvider({
      clientId: process.env.GOOGLE_CLIENT_ID || "",
      clientSecret: process.env.GOOGLE_CLIENT_SECRET || "",
    }),
  ],
  callbacks: {
    async signIn({ user }) {
      const users = await usersCollection()
      const existing = await users.findOne({ email: user.email as string })
      if (!existing) {
        await users.insertOne({
          // @ts-expect-error _id generated by Mongo
          email: user.email as string,
          name: user.name || "",
          image: user.image || "",
          createdAt: new Date(),
          updatedAt: new Date(),
        })
      }
      return true
    },
    async jwt({ token, user }) {
      if (user?.email) {
        token.email = user.email
        token.name = user.name
        token.picture = user.image
      }
      return token
    },
    async session({ session, token }) {
      if (!session.user) session.user = { name: null, email: null, image: null }
      session.user.email = (token.email as string) || null
      session.user.name = (token.name as string) || null
      session.user.image = (token.picture as string) || null
      return session
    },
  },
  pages: { signIn: "/" },
}

const handler = NextAuth(authOptions)
export { handler as GET, handler as POST }
